<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components PUBLIC "-//SEASAR//DTD S2Container 2.4//EN"
	"http://www.seasar.org/dtd/components24.dtd">
<components>
	<include path="aop.dicon"/>
	
	<include path="convention.dicon"
		condition="@org.seasar.chronos.core.util.DiconConditionUtil@hasConvention()" />
	<include path="chronosCustomize.dicon"
		condition="@org.seasar.chronos.core.util.DiconConditionUtil@hasCustomizeDicon()" />
		<component class="org.seasar.chronos.core.task.impl.TaskAnnotationReaderImpl"/>
	
	<!-- タスクのプロパティを読み込むためのコマンド群 -->
	<component name="taskGetTaskNamePropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskGetTaskNamePropertyReadHandlerImpl" instance="prototype"/>
	<component name="taskGetThreadPoolSizePropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskGetThreadPoolSizePropertyReadHandlerImpl" instance="prototype"/>
	<component name="taskGetThreadPoolTypePropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskGetThreadPoolTypePropertyReadHandlerImpl" instance="prototype"/>
	<component name="taskIsStartTaskPropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskIsStartTaskPropertyReadHandlerImpl" instance="prototype"/>
	<component name="taskIsEndTaskPropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskIsEndTaskPropertyReadHandlerImpl" instance="prototype"/>
	<component name="taskIsReSchedulePropertyReadCommand" class="org.seasar.chronos.core.task.handler.impl.property.read.TaskIsReSchedulePropertyReadHandlerImpl" instance="prototype"/>
	
	<!-- タスクのプロパティに書き込むためのコマンド群 -->
	<component name="taskSetTaskNamePropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetTaskNamePropertyWriteHandlerImpl" instance="prototype"/>
	<component name="taskSetThreadPoolSizePropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetThreadPoolSizePropertyWriteHandlerImpl" instance="prototype"/>
	<component name="taskSetThreadPoolTypePropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetThreadPoolTypePropertyWriteHandlerImpl" instance="prototype"/>
	<component name="taskSetStartTaskPropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetStartTaskPropertyWriteHandlerImpl" instance="prototype"/>
	<component name="taskSetEndTaskPropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetEndTaskPropertyWriteHandlerImpl" instance="prototype"/>
	<component name="taskSetReSchedulePropertyWriteCommand" class="org.seasar.chronos.core.task.handler.impl.property.write.TaskSetReSchedulePropertyWriteHandlerImpl" instance="prototype"/>
	
	<!-- タスクのプロパティを読み込むコマンドのファクトリ -->
	<component class="org.seasar.chronos.core.task.handler.impl.factory.TaskPropertyReadHandlerFactoryImpl"/>
	<component class="org.seasar.chronos.core.task.handler.impl.factory.TaskPropertyWriteHandlerFactoryImpl"/>
	
	<!-- タスクのプロパティリーダー -->
	<component class="org.seasar.chronos.core.task.impl.TaskPropertyReaderImpl">
	    <aspect pointcut="getTaskName,isEndTask,isStartTask,isReSchedule,getThreadPoolType,getThreadPoolSize">
     		<component class="org.seasar.chronos.core.interceptor.TriggerPropertyReadInterceptor"/>
	    </aspect>
	</component>
	<!-- タスクのプロパティライター -->
	<component class="org.seasar.chronos.core.task.impl.TaskPropertyWriterImpl">
<!--
	    <aspect pointcut="setTaskName,setEndTask,setStartTask,setReSchedule,setThreadPoolType,setThreadPoolSize">
     		<component class="org.seasar.chronos.core.interceptor.TriggerPropertyWriteInterceptor"/>
	    </aspect>
-->
	</component>
	<!-- タスクバリデータ -->
	<component class="org.seasar.chronos.core.task.impl.TaskValidatorImpl"/>
	
	<!-- SMART deploy時にTaskコンポーネントを自動認識するDetector -->
	<component name="taskClassAutoDetector" class="org.seasar.chronos.core.autodetector.TaskClassAutoDetector"/>
	
	<component name="timedTrigger" class="org.seasar.chronos.core.trigger.CTimedTrigger" instance="prototype"/>
	<component name="nonDelayTrigger" class="org.seasar.chronos.core.trigger.CNonDelayTrigger" instance="prototype"/>
	<component name="delayTrigger" class="org.seasar.chronos.core.trigger.CDelayTrigger" instance="prototype"/>
	<component name="cronTrigger" class="org.seasar.chronos.core.trigger.CCronTrigger" instance="prototype"/>
</components>
